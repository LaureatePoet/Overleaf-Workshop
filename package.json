{
  "name": "overleaf-workshop",
  "displayName": "Overleaf Workshop",
  "description": "Open Overleaf/ShareLaTex projects in vscode, with full collaboration support.",
  "version": "0.2.2",
  "icon": "resources/icons/app_icon.png",
  "author": {
    "name": "iamhyc",
    "email": "sudofree@163.com"
  },
  "publisher": "iamhyc",
  "contributors": [
    {
      "name": "iamhyc",
      "email": "sudofree@163.com",
      "url": "https://github.com/iamhyc"
    },
    {
      "name": "QianrenLi",
      "email": "liqr2022@mail.sustech.edu.cn",
      "url": "https://github.com/QianrenLi"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/iamhyc/overleaf-workshop"
  },
  "bugs": {
    "url": "https://github.com/iamhyc/overleaf-workshop/issues"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onFileSystem:overleaf-workshop"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "tex",
        "aliases": ["TeX","tex"],
        "extensions": [".sty",".cls",".bbx",".cbx"],
        "configuration": "data/vendor/languages/latex-language-configuration.json"
      },
      {
        "id": "latex",
        "aliases": ["LaTeX","latex"],
        "extensions": [".tex",".ltx",".ctx"],
        "configuration": "data/vendor/languages/latex-language-configuration.json"
      },
      {
        "id": "bibtex",
        "aliases": ["BibTeX","bibtex"],
        "extensions": [".bib"]
      },
      {
        "id": "cpp_embedded_latex",
        "configuration": "data/vendor/languages/latex-cpp-embedded-language-configuration.json",
        "aliases": []
      },
      {
        "id": "markdown_latex_combined",
        "configuration": "data/vendor/languages/markdown-latex-combined-language-configuration.json",
        "aliases": []
      }
    ],
    "commands": [
      {
        "command": "projectManager.addServer",
        "title": "Add New Server",
        "icon": "$(add)"
      },
      {
        "command": "projectManager.removeServer",
        "title": "Remove Server",
        "icon": "$(trash)"
      },
      {
        "command": "projectManager.loginServer",
        "title": "Login Server",
        "icon": "$(log-in)"
      },
      {
        "command": "projectManager.logoutServer",
        "title": "Logout Server",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "projectManager.refreshServer",
        "title": "Refresh Project List",
        "icon": "$(refresh)"
      },
      {
        "command": "projectManager.newProject",
        "title": "New Project",
        "icon": "$(add)"
      },
      {
        "command": "projectManager.renameProject",
        "title": "Rename Project",
        "icon": "$(edit)"
      },
      {
        "command": "projectManager.deleteProject",
        "title": "Delete Project",
        "icon": "$(close-all)"
      },
      {
        "command": "projectManager.archiveProject",
        "title": "Archive Project",
        "icon": "$(archive)"
      },
      {
        "command": "projectManager.unarchiveProject",
        "title": "Unarchive Project",
        "icon": "$(go-to-file)"
      },
      {
        "command": "projectManager.trashProject",
        "title": "Move Project to Trash",
        "icon": "$(trash)"
      },
      {
        "command": "projectManager.untrashProject",
        "title": "Restore Project",
        "icon": "$(go-to-file)"
      },
      {
        "command": "projectManager.createTag",
        "title": "Create New Tag"
      },
      {
        "command": "projectManager.renameTag",
        "title": "Rename Tag",
        "icon": "$(edit)"
      },
      {
        "command": "projectManager.deleteTag",
        "title": "Delete Tag",
        "icon": "$(close-all)"
      },
      {
        "command": "projectManager.addProjectToTag",
        "title": "Move Project to Tag",
        "icon": "$(tag)"
      },
      {
        "command": "projectManager.removeProjectFromTag",
        "title": "Remove Project from Tag"
      },
      {
        "command": "projectManager.openProjectInCurrentWindow",
        "title": "Open Project in Current Window ...",
        "icon": "$(arrow-right)"
      },
      {
        "command": "projectManager.openProjectInNewWindow",
        "title": "Open Project in New Window ...",
        "icon": "$(empty-window)"
      },
      {
        "command": "projectHistory.refresh",
        "title": "Refresh Project History",
        "icon": "$(refresh)"
      },
      {
        "command": "compileManager.compile",
        "title": "Compile Project",
        "category": "Overleaf Workshop"
      },
      {
        "command": "compileManager.viewPdf",
        "title": "View Compiled PDF",
        "category": "Overleaf Workshop"
      },
      {
        "command": "compileManager.syncCode",
        "title": "Jump to PDF",
        "category": "Overleaf Workshop"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "command": "compileManager.compile",
        "when": "editorTextFocus && resourceScheme == overleaf-workshop && resourceExtname == .tex"
      },
      {
        "key": "ctrl+alt+v",
        "mac": "cmd+vlt+v",
        "command": "compileManager.viewPdf",
        "when": "editorTextFocus && resourceScheme == overleaf-workshop && resourceExtname == .tex"
      },
      {
        "key": "ctrl+alt+j",
        "mac": "cmd+alt+j",
        "command": "compileManager.syncCode",
        "when": "editorTextFocus && resourceScheme == overleaf-workshop && resourceExtname == .tex"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "overleaf-workshop",
          "title": "Overleaf Workshop",
          "icon": "resources/icons/overleaf_bw.svg"
        }
      ]
    },
    "views": {
      "overleaf-workshop": [
        {
          "id": "projectManager",
          "name": "Hosts"
        }
      ],
      "explorer": [
        {
          "id": "projectHistory",
          "name": "History",
          "contextualTitle": "Overleaf Project History",
          "when": "resourceScheme == overleaf-workshop"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "projectManager.addServer",
          "when": "view == projectManager",
          "group": "navigation"
        },
        {
          "command": "projectHistory.refresh",
          "when": "view == projectHistory",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "projectManager.loginServer",
          "when": "view == projectManager && viewItem == server_no_login",
          "group": "inline"
        },
        {
          "command": "projectManager.newProject",
          "when": "view == projectManager && viewItem == server_login",
          "group": "inline@1"
        },
        {
          "command": "projectManager.refreshServer",
          "when": "view == projectManager && viewItem == server_login",
          "group": "inline@2"
        },
        {
          "command": "projectManager.logoutServer",
          "when": "view == projectManager && viewItem == server_login",
          "group": "inline@3"
        },
        {
          "command": "projectManager.removeServer",
          "when": "view == projectManager && viewItem == server_login || viewItem == server_no_login"
        },
        {
          "command": "projectManager.renameProject",
          "when": "view == projectManager && viewItem =~ /^(?!archived).*project/"
        },
        {
          "command": "projectManager.deleteProject",
          "when": "view == projectManager && viewItem == trashed_project",
          "group": "inline@1"
        },
        {
          "command": "projectManager.archiveProject",
          "when": "view == projectManager && viewItem =~ /^(?!archived).*project/"
        },
        {
          "command": "projectManager.unarchiveProject",
          "when": "view == projectManager && viewItem == archived_project",
          "group": "inline@2"
        },
        {
          "command": "projectManager.trashProject",
          "when": "view == projectManager && viewItem =~ /^(?!trashed).*project/"
        },
        {
          "command": "projectManager.untrashProject",
          "when": "view == projectManager && viewItem == trashed_project",
          "group": "inline@2"
        },
        {
          "command": "projectManager.createTag",
          "when": "view == projectManager && viewItem == server_login"
        },
        {
          "command": "projectManager.renameTag",
          "when": "view == projectManager && viewItem == tag",
          "group": "inline@1"
        },
        {
          "command": "projectManager.deleteTag",
          "when": "view == projectManager && viewItem == tag",
          "group": "inline@2"
        },
        {
          "command": "projectManager.addProjectToTag",
          "when": "view == projectManager && viewItem == project"
        },
        {
          "command": "projectManager.removeProjectFromTag",
          "when": "view == projectManager && viewItem == project_in_tag"
        },
        {
          "command": "projectManager.openProjectInCurrentWindow",
          "when": "view == projectManager && viewItem == project || viewItem == project_in_tag",
          "group": "inline@3"
        },
        {
          "command": "projectManager.openProjectInNewWindow",
          "when": "view == projectManager && viewItem == project || viewItem == project_in_tag",
          "group": "inline@4"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "overleaf-workshop.pdfViewer",
        "displayName": "Overleaf Workshop PDF Viewer",
        "selector": [
          {
            "filenamePattern": "**/output.pdf"
          },
          {
            "filenamePattern": "*.pdf"
          },
          {
            "filenamePattern": "*.PDF"
          }
        ],
        "priority": "default"
      }
    ]
  },
  "scripts": {
    "download-pdfjs": "download -o views/vendor -e https://github.com/mozilla/pdf.js/releases/download/v3.10.111/pdfjs-3.10.111-dist.zip; cd views/vendor && patch -p1 < pdfjs-3.10.111-dist.patch",
    "download-latex-basics": "download -o data/vendor -s 1 -e https://github.com/jlelong/vscode-latex-basics/archive/refs/tags/v1.5.4.zip",
    "postinstall": "patch-package; npm run download-pdfjs; npm run download-latex-basics",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "diff": "^5.1.0",
    "form-data": "^4.0.0",
    "mime-types": "^2.1.35",
    "node-fetch": "^2.6.13",
    "socket.io-client": "github:overleaf/socket.io-client#0.9.17-overleaf-5"
  },
  "devDependencies": {
    "@types/diff": "^5.0.3",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/node-fetch": "^2.6.4",
    "@types/socket.io-client": "^1.4.36",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "download-cli": "^1.1.1",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "patch-package": "^7.0.2",
    "typescript": "^5.1.3"
  },
  "extensionKind": ["workspace", "ui"]
}
